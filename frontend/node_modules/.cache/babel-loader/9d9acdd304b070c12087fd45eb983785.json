{"remainingRequest":"C:\\Users\\Admin\\Desktop\\server-dashboard\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Admin\\Desktop\\server-dashboard\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\Admin\\Desktop\\server-dashboard\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Admin\\Desktop\\server-dashboard\\frontend\\src\\views\\Users.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Admin\\Desktop\\server-dashboard\\frontend\\src\\views\\Users.vue","mtime":1638793342128},{"path":"C:\\Users\\Admin\\Desktop\\server-dashboard\\frontend\\babel.config.js","mtime":1638793342112},{"path":"C:\\Users\\Admin\\Desktop\\server-dashboard\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1638800208235},{"path":"C:\\Users\\Admin\\Desktop\\server-dashboard\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1638800209093},{"path":"C:\\Users\\Admin\\Desktop\\server-dashboard\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1638800208235},{"path":"C:\\Users\\Admin\\Desktop\\server-dashboard\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1638800209398}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc29ydC5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vIEAgaXMgYW4gYWxpYXMgdG8gL3NyYwppbXBvcnQgeyBIVFRQIH0gZnJvbSAnLi9odHRwLWNvbW1vbic7CmV4cG9ydCBkZWZhdWx0IHsKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdGhpcy5yZWZyZXNoKCk7CiAgICB0aGlzLnRpbWVyID0gc2V0SW50ZXJ2YWwodGhpcy5yZWZyZXNoLCA2MDAwMCk7CiAgfSwKICBiZWZvcmVEZXN0cm95OiBmdW5jdGlvbiBiZWZvcmVEZXN0cm95KCkgewogICAgY2xlYXJJbnRlcnZhbCh0aGlzLnRpbWVyKTsKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB1c2VyczogW10sCiAgICAgIHJlZnJlc2hMb2FkaW5nOiBmYWxzZSwKICAgICAgb25seVNob3dNeVByb2M6IHRydWUsCiAgICAgIHNuYWNrYmFyOiBmYWxzZSwKICAgICAgZGF0ZTogJycKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBzb3J0Qnk6IGZ1bmN0aW9uIHNvcnRCeShwcm9wKSB7CiAgICAgIHRoaXMudXNlcnMuc29ydChmdW5jdGlvbiAoYSwgYikgewogICAgICAgIHJldHVybiBhW3Byb3BdID4gYltwcm9wXSA/IC0xIDogMTsKICAgICAgfSk7CiAgICB9LAogICAgcHJvY2Vzc0xpc3Q6IGZ1bmN0aW9uIHByb2Nlc3NMaXN0KCkgewogICAgICByZXR1cm4gdGhpcy51c2VyczsKICAgIH0sCiAgICByZWZyZXNoOiBmdW5jdGlvbiByZWZyZXNoKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdGhpcy5yZWZyZXNoTG9hZGluZyA9IHRydWU7CiAgICAgIEhUVFAuZ2V0KCdnZXQtdXNlcnMnKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBfdGhpcy51c2VycyA9IHJlcy5kYXRhOwogICAgICAgIF90aGlzLnJlZnJlc2hMb2FkaW5nID0gZmFsc2U7CiAgICAgICAgX3RoaXMuZGF0ZSA9IG5ldyBEYXRlKCkudG9Mb2NhbGVTdHJpbmcoImRlLURFIiwgewogICAgICAgICAgdGltZVpvbmU6ICJFdXJvcGUvQmVybGluIgogICAgICAgIH0pOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyKSB7CiAgICAgICAgY29uc29sZS5sb2coZXJyKTsKICAgICAgICBfdGhpcy5yZWZyZXNoTG9hZGluZyA9IGZhbHNlOwogICAgICAgIF90aGlzLnNuYWNrYmFyID0gdHJ1ZTsKICAgICAgfSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["Users.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgEA;AACA,SAAA,IAAA,QAAA,eAAA;AAEA,eAAA;AACA,EAAA,OADA,qBACA;AACA,SAAA,OAAA;AACA,SAAA,KAAA,GAAA,WAAA,CAAA,KAAA,OAAA,EAAA,KAAA,CAAA;AACA,GAJA;AAKA,EAAA,aALA,2BAKA;AACA,IAAA,aAAA,CAAA,KAAA,KAAA,CAAA;AACA,GAPA;AAQA,EAAA,IARA,kBAQA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,EADA;AAEA,MAAA,cAAA,EAAA,KAFA;AAGA,MAAA,cAAA,EAAA,IAHA;AAIA,MAAA,QAAA,EAAA,KAJA;AAKA,MAAA,IAAA,EAAA;AALA,KAAA;AAOA,GAhBA;AAiBA,EAAA,OAAA,EAAA;AACA,IAAA,MADA,kBACA,IADA,EACA;AACA,WAAA,KAAA,CAAA,IAAA,CAAA,UAAA,CAAA,EAAA,CAAA;AAAA,eAAA,CAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA,GAAA,CAAA;AAAA,OAAA;AACA,KAHA;AAIA,IAAA,WAJA,yBAIA;AACA,aAAA,KAAA,KAAA;AACA,KANA;AAOA,IAAA,OAPA,qBAOA;AAAA;;AACA,WAAA,cAAA,GAAA,IAAA;AACA,MAAA,IAAA,CAAA,GAAA,CAAA,WAAA,EACA,IADA,CACA,UAAA,GAAA,EAAA;AACA,QAAA,KAAA,CAAA,KAAA,GAAA,GAAA,CAAA,IAAA;AACA,QAAA,KAAA,CAAA,cAAA,GAAA,KAAA;AACA,QAAA,KAAA,CAAA,IAAA,GAAA,IAAA,IAAA,GAAA,cAAA,CAAA,OAAA,EAAA;AAAA,UAAA,QAAA,EAAA;AAAA,SAAA,CAAA;AACA,OALA,EAMA,KANA,CAMA,UAAA,GAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,GAAA;AACA,QAAA,KAAA,CAAA,cAAA,GAAA,KAAA;AACA,QAAA,KAAA,CAAA,QAAA,GAAA,IAAA;AACA,OAVA;AAWA;AApBA;AAjBA,CAAA","sourcesContent":["<template>\r\n  <div class=\"users\">\r\n    <h1 class=\"subtitle-1 grey--text\">Users</h1>\r\n\r\n    <v-snackbar v-model=\"snackbar\" :timeout=\"8000\" top color=\"red darken-4\">\r\n      <span>An error occurred while connecting to the servers.</span>\r\n      <v-btn text color=\"white\" @click=\"snackbar = false\">Close</v-btn>\r\n    </v-snackbar>\r\n\r\n    <v-container class=\"my-5\">\r\n      <v-row wrap>\r\n        <v-tooltip top>\r\n          <template v-slot:activator=\"{ on }\">\r\n            <v-btn small text depressed color=\"grey--text\" @click=\"sortBy('num_gpus')\" v-on=\"on\">\r\n              <v-icon left small>filter_none</v-icon>\r\n              <span class=\"caption\">by number of GPUs</span>\r\n            </v-btn>\r\n          </template>\r\n          <span>Sort users by number of GPUs</span>\r\n        </v-tooltip>\r\n\r\n        <v-tooltip top>\r\n          <template v-slot:activator=\"{ on }\">\r\n            <v-btn small text depressed color=\"grey--text\" @click=\"sortBy('gpu_ram')\" v-on=\"on\">\r\n              <v-icon left small>memory</v-icon>\r\n              <span class=\"caption\">by GPU RAM</span>\r\n            </v-btn>\r\n          </template>\r\n          <span>Sort users by GPU RAM</span>\r\n        </v-tooltip>\r\n\r\n        <v-spacer></v-spacer>\r\n        <span class=\"grey--text pr-2 my-2\" v-if=\"date !== ''\">Last update: {{ date }}</span>\r\n        <v-btn text color=\"grey\" class=\"my-0\" :loading=\"refreshLoading\" @click=\"refresh\">\r\n          <v-icon left>refresh</v-icon>\r\n          <span>Refresh</span>\r\n        </v-btn>\r\n\r\n      </v-row>\r\n\r\n      <div class=\"my-10\">\r\n        <v-simple-table dense>\r\n          <thead>\r\n            <tr>\r\n              <td><span class=\"font-weight-bold\">User</span></td>\r\n              <td><span class=\"font-weight-bold\">Number of GPUs</span></td>\r\n              <td><span class=\"font-weight-bold\">GPU RAM</span></td>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"user in processList()\" :key=\"user.username\">\r\n              <td><span>{{ user.username }}</span></td>\r\n              <td><span>{{ user.num_gpus }}</span></td>\r\n              <td><span>{{ user.gpu_ram }}</span></td>\r\n            </tr>\r\n          </tbody>\r\n        </v-simple-table>\r\n      </div>\r\n    </v-container>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// @ is an alias to /src\r\nimport { HTTP } from './http-common';\r\n\r\nexport default {\r\n  created() {\r\n    this.refresh();\r\n    this.timer = setInterval(this.refresh, 60000)\r\n  },\r\n  beforeDestroy() {\r\n    clearInterval(this.timer)\r\n  },\r\n  data() {\r\n    return {\r\n      users: [],\r\n      refreshLoading: false,\r\n      onlyShowMyProc: true,\r\n      snackbar: false,\r\n      date: '',\r\n    }\r\n  },\r\n  methods: {\r\n    sortBy(prop) {\r\n      this.users.sort((a, b) => a[prop] > b[prop] ? -1 : 1)\r\n    },\r\n    processList() {\r\n      return this.users\r\n    },\r\n    refresh() {\r\n      this.refreshLoading = true;\r\n      HTTP.get('get-users')\r\n          .then(res => {\r\n            this.users = res.data;\r\n            this.refreshLoading = false;\r\n            this.date = new Date().toLocaleString(\"de-DE\", {timeZone: \"Europe/Berlin\"});\r\n          })\r\n          .catch(err => {\r\n            console.log(err);\r\n            this.refreshLoading = false;\r\n            this.snackbar = true;\r\n          });\r\n    }\r\n  }\r\n}\r\n</script>"],"sourceRoot":"src/views"}]}