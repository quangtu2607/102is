{"remainingRequest":"C:\\Users\\Admin\\Desktop\\server-dashboard\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Admin\\Desktop\\server-dashboard\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\Admin\\Desktop\\server-dashboard\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Admin\\Desktop\\server-dashboard\\frontend\\src\\views\\GPUOverview.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Admin\\Desktop\\server-dashboard\\frontend\\src\\views\\GPUOverview.vue","mtime":1638882791883},{"path":"C:\\Users\\Admin\\Desktop\\server-dashboard\\frontend\\babel.config.js","mtime":1638793342112},{"path":"C:\\Users\\Admin\\Desktop\\server-dashboard\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1638800208235},{"path":"C:\\Users\\Admin\\Desktop\\server-dashboard\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1638800209093},{"path":"C:\\Users\\Admin\\Desktop\\server-dashboard\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1638800208235},{"path":"C:\\Users\\Admin\\Desktop\\server-dashboard\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1638800209398}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8gQCBpcyBhbiBhbGlhcyB0byAvc3JjCi8vIGltcG9ydCB7IEhUVFAgfSBmcm9tICcuL2h0dHAtY29tbW9uJzsKZXhwb3J0IGRlZmF1bHQgewogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB0aGlzLnJlZnJlc2goKTsKICAgIHRoaXMudGltZXIgPSBzZXRJbnRlcnZhbCh0aGlzLnJlZnJlc2gsIDYwMDAwKTsKICB9LAogIGJlZm9yZURlc3Ryb3k6IGZ1bmN0aW9uIGJlZm9yZURlc3Ryb3koKSB7CiAgICBjbGVhckludGVydmFsKHRoaXMudGltZXIpOwogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHVzZXJuYW1lOiBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgndXNlcm5hbWUnKSwKICAgICAgc2VydmVyczogW10sCiAgICAgIGhpZ2hsaWdodEZyZWVHUFVzOiBmYWxzZSwKICAgICAgb25seVNob3dGcmVlR1BVOiBmYWxzZSwKICAgICAgaGlnaGxpZ2h0VXNlcm5hbWU6IHRydWUsCiAgICAgIG1heFByb2Nlc3Nlc1Nob3c6IDEsCiAgICAgIHJlZnJlc2hMb2FkaW5nOiBmYWxzZSwKICAgICAgc25hY2tiYXI6IGZhbHNlLAogICAgICBkYXRlOiAnJwogICAgfTsKICB9LAogIG1ldGhvZHM6IHsvLyBzd2l0Y2hIaWdobGlnaHRGcmVlR1BVKCkgewogICAgLy8gICB0aGlzLmhpZ2hsaWdodEZyZWVHUFVzID0gIXRoaXMuaGlnaGxpZ2h0RnJlZUdQVXM7CiAgICAvLyB9LAogICAgLy8gc3dpdGNoU2hvd0ZyZWVHUFUoKSB7CiAgICAvLyAgIHRoaXMub25seVNob3dGcmVlR1BVID0gIXRoaXMub25seVNob3dGcmVlR1BVOwogICAgLy8gfSwKICAgIC8vIHN0b3JlX3VzZXJuYW1lKCkgewogICAgLy8gICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgndXNlcm5hbWUnLCB0aGlzLnVzZXJuYW1lKTsKICAgIC8vIH0sCiAgICAvLyBwcm9jZXNzTGlzdCgpIHsKICAgIC8vICAgbGV0IHNlcnZlckxpc3QgPSBbLi4udGhpcy5zZXJ2ZXJzXQogICAgLy8gICBsZXQgc2VydmVyTGlzdEZpbHRlcmVkID0gW107CiAgICAvLyAgIGlmICh0aGlzLm9ubHlTaG93RnJlZUdQVSkgewogICAgLy8gICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc2VydmVyTGlzdC5sZW5ndGg7IGkrKykgewogICAgLy8gICAgICAgbGV0IGZvdW5kRnJlZUdQVSA9IGZhbHNlOwogICAgLy8gICAgICAgZm9yIChsZXQgaiA9IDA7IGogPCBzZXJ2ZXJMaXN0W2ldLmdwdXMubGVuZ3RoOyBqKyspIHsKICAgIC8vICAgICAgICAgaWYgKHNlcnZlckxpc3RbaV0uZ3B1c1tqXS5tZW1vcnlfdXNlZCA8IChzZXJ2ZXJMaXN0W2ldLmdwdXNbal0ubWVtb3J5X3RvdGFsICogMC4xKSkgewogICAgLy8gICAgICAgICAgIGZvdW5kRnJlZUdQVSA9IHRydWU7CiAgICAvLyAgICAgICAgICAgYnJlYWs7CiAgICAvLyAgICAgICAgIH0KICAgIC8vICAgICAgIH0KICAgIC8vICAgICAgIGlmIChmb3VuZEZyZWVHUFUpIHsKICAgIC8vICAgICAgICAgc2VydmVyTGlzdEZpbHRlcmVkLnB1c2goc2VydmVyTGlzdFtpXSkKICAgIC8vICAgICAgIH0KICAgIC8vICAgICB9CiAgICAvLyAgIH0gZWxzZSB7CiAgICAvLyAgICAgc2VydmVyTGlzdEZpbHRlcmVkID0gc2VydmVyTGlzdDsKICAgIC8vICAgfQogICAgLy8gICByZXR1cm4gc2VydmVyTGlzdEZpbHRlcmVkOwogICAgLy8gfSwKICAgIC8vIHJlZnJlc2goKSB7CiAgICAvLyAgIHRoaXMucmVmcmVzaExvYWRpbmcgPSB0cnVlOwogICAgLy8gICBIVFRQLmdldCgnZ2V0LWdwdXMnKQogICAgLy8gICAgICAgLnRoZW4ocmVzID0+IHsKICAgIC8vICAgICAgICAgdGhpcy5zZXJ2ZXJzID0gcmVzLmRhdGE7CiAgICAvLyAgICAgICAgIHRoaXMuc2VydmVycy5zb3J0KChhLCBiKSA9PiBhLmhvc3RuYW1lIDwgYi5ob3N0bmFtZSA/IC0xIDogMSk7CiAgICAvLyAgICAgICAgIHRoaXMucmVmcmVzaExvYWRpbmcgPSBmYWxzZTsKICAgIC8vICAgICAgICAgdGhpcy5kYXRlID0gbmV3IERhdGUoKS50b0xvY2FsZVN0cmluZygiZGUtREUiLCB7dGltZVpvbmU6ICJFdXJvcGUvQmVybGluIn0pOwogICAgLy8gICAgICAgfSkKICAgIC8vICAgICAgIC5jYXRjaChlcnIgPT4gewogICAgLy8gICAgICAgICBjb25zb2xlLmxvZyhlcnIpOwogICAgLy8gICAgICAgICB0aGlzLnJlZnJlc2hMb2FkaW5nID0gZmFsc2U7CiAgICAvLyAgICAgICAgIHRoaXMuc25hY2tiYXIgPSB0cnVlOwogICAgLy8gICAgICAgfSk7CiAgICAvLyB9CiAgfQp9Ow=="},{"version":3,"sources":["GPUOverview.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqGA;AACA;AAEA,eAAA;AACA,EAAA,OADA,qBACA;AACA,SAAA,OAAA;AACA,SAAA,KAAA,GAAA,WAAA,CAAA,KAAA,OAAA,EAAA,KAAA,CAAA;AACA,GAJA;AAKA,EAAA,aALA,2BAKA;AACA,IAAA,aAAA,CAAA,KAAA,KAAA,CAAA;AACA,GAPA;AAQA,EAAA,IARA,kBAQA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,YAAA,CAAA,OAAA,CAAA,UAAA,CADA;AAEA,MAAA,OAAA,EAAA,EAFA;AAGA,MAAA,iBAAA,EAAA,KAHA;AAIA,MAAA,eAAA,EAAA,KAJA;AAKA,MAAA,iBAAA,EAAA,IALA;AAMA,MAAA,gBAAA,EAAA,CANA;AAOA,MAAA,cAAA,EAAA,KAPA;AAQA,MAAA,QAAA,EAAA,KARA;AASA,MAAA,IAAA,EAAA;AATA,KAAA;AAWA,GApBA;AAqBA,EAAA,OAAA,EAAA,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9CA;AArBA,CAAA","sourcesContent":["<template>\r\n  <div class=\"gpu-overview\">\r\n    \r\n\r\n    <!-- <v-snackbar v-model=\"snackbar\" :timeout=\"8000\" top color=\"red darken-4\">\r\n      <span>An error occurred while connecting to the servers.</span>\r\n      <v-btn text color=\"white\" @click=\"snackbar = false\">Close</v-btn>\r\n    </v-snackbar> -->\r\n\r\n    <v-container class=\"mb-5\">\r\n      <v-row wrap>\r\n        <h1 class=\"subtitle-1 grey--text\">Match Overview</h1>\r\n        <!-- <v-switch class=\"px-2 my-1 pt-5\" @change=\"switchHighlightFreeGPU()\" color=\"green lighten-2\" label=\"Highlight free GPUs\"></v-switch>\r\n        <v-switch class=\"px-2 my-1 pt-5\" @change=\"switchShowFreeGPU()\" color=\"green lighten-2\" label=\"Only show servers with free GPUs\"></v-switch>\r\n        <v-text-field class=\"px-2 my-1\" v-model=\"username\" color=\"purple\" @change=\"store_username()\" label=\"Type in username to highlight\"></v-text-field>\r\n        <v-spacer></v-spacer>\r\n        <span class=\"grey--text pr-2 my-2 pt-5\" v-if=\"date !== ''\">Last update: {{ date }}</span>\r\n        <div class=\"my-1 pt-4\">\r\n          <v-btn text color=\"grey\" :loading=\"refreshLoading\" @click=\"refresh\">\r\n            <v-icon left>refresh</v-icon>\r\n            <span>Refresh</span>\r\n          </v-btn>\r\n        </div> -->\r\n\r\n      </v-row>\r\n\r\n      <v-row wrap justify=\"center\">\r\n        <v-card elevation=\"2\" height=\"100%\" width=\"75%\" align=\"center\">asdasdasdasd</v-card>\r\n      </v-row>\r\n      <v-row wrap justify=\"center\">\r\n        <v-card elevation=\"2\" height=\"100%\" width=\"75%\" align=\"center\">asdasdasdasd</v-card>\r\n      </v-row>\r\n        <!-- <v-col class=\"my-2\" cols=\"12\" lg=\"6\" v-for=\"server in processList()\" :key=\"server.hostname\">\r\n          <div class=\"white\">\r\n            <div class=\"ma-2\">\r\n              <span class=\"grey--text text--darken-3 font-weight-bold\">{{ server.hostname }}</span>\r\n              <v-simple-table dense>\r\n                <tbody>\r\n                <tr v-for=\"gpu in server.gpus\" :key=\"gpu.index\" :class=\"(gpu.memory_used < gpu.memory_total * 0.1) && highlightFreeGPUs ? 'green lighten-4' : 'white'\">\r\n                  <td class=\"pa-0 ma-0\"><span class=\"teal--text text--lighten-1\">[{{ gpu.index }}]</span></td>\r\n                  <td class=\"pa-0 ma-0\"><span class=\"indigo--text text--darken-4\">{{ gpu.name }}</span></td>\r\n                  <td class=\"pa-0 ma-0\"><span>| </span></td>\r\n                  <td class=\"pa-0 ma-0\">\r\n                    <span class=\"red--text text--darken-4\" v-if=\"gpu.temperature_gpu < 50\">{{ gpu.temperature_gpu }}'C</span>\r\n                    <span class=\"deep-orange--text text--accent-3 font-weight-bold\" v-if=\"gpu.temperature_gpu >= 50\">{{ gpu.temperature_gpu }}'C</span>,\r\n                  </td>\r\n                  <td class=\"pa-0 ma-0\">\r\n                    <span class=\"green--text text--darken-4\" v-if=\"gpu.utilization_gpu === 0\">{{ gpu.utilization_gpu }}</span>\r\n                    <span class=\"green--text text--darken-2 font-weight-bold\" v-if=\"gpu.utilization_gpu > 0\">{{ gpu.utilization_gpu }}</span>\r\n                  </td>\r\n                  <td>\r\n                    <span class=\"green--text text--darken-4\" v-if=\"gpu.utilization_gpu === 0\">%</span>\r\n                    <span class=\"green--text text--darken-2 font-weight-bold\" v-if=\"gpu.utilization_gpu > 0\">%</span>\r\n                  </td>\r\n                  <td class=\"pa-0 ma-0\"><span>| </span></td>\r\n                  <td class=\"pa-0 ma-0\">\r\n                    <span class=\"lime--text text--darken-3 font-weight-bold\">{{ gpu.memory_used }}</span> /\r\n                    <span class=\"lime--text text--darken-4\">{{ gpu.memory_total }}</span> MB\r\n                  </td>\r\n                  <td class=\"pa-0 ma-0\"><span>| </span></td>\r\n                  <td class=\"pa-0 ma-0\">\r\n                    <div v-if=\"gpu.processes.length <= maxProcessesShow\" class=\"pa-0 ma-0\">\r\n                      <span class=\"px-1\" v-for=\"process in gpu.processes\" :key=\"process.pid\">\r\n                        <span v-if=\"process.username === username && highlightUsername\" class=\"purple--text\">{{ process.username }}</span>\r\n                        <span v-if=\"process.username !== username || !highlightUsername\">{{ process.username }}</span>\r\n                        (<span class=\"lime--text text--darken-4\">{{ process.gpu_memory_usage }}</span>)\r\n                      </span>\r\n                    </div>\r\n                    <div v-if=\"gpu.processes.length > maxProcessesShow\" class=\"pa-0 ma-0\">\r\n                      <span class=\"px-1\" v-for=\"process in gpu.processes.slice(0, maxProcessesShow)\" :key=\"process.pid\">\r\n                        <span v-if=\"process.username === username && highlightUsername\" class=\"purple--text pa-0 ma-0\">{{ process.username }}</span>\r\n                        <span v-if=\"process.username !== username || !highlightUsername\" class=\"pa-0 ma-0\">{{ process.username }}</span>\r\n                        (<span class=\"lime--text text--darken-4\">{{ process.gpu_memory_usage }}</span>)\r\n                      </span>\r\n                      <v-tooltip top content-class=\"grey\">\r\n                        <template v-slot:activator=\"{ on, attrs }\">\r\n                          <v-btn icon v-bind=\"attrs\" v-on=\"on\">\r\n                            <v-icon color=\"grey darken-3\">more_horiz</v-icon>\r\n                          </v-btn>\r\n                        </template>\r\n                        <span class=\"pa-0 ma-0\" v-for=\"process in gpu.processes\" :key=\"process.pid\">\r\n                          <span v-if=\"process.username === username && highlightUsername\" class=\"purple--text pa-0 ma-0\">{{ process.username }}</span>\r\n                          <span v-if=\"process.username !== username || !highlightUsername\" class=\"pa-0 ma-0\">{{ process.username }}</span>\r\n                          (<span class=\"black--text text--darken-2\">{{ process.gpu_memory_usage }}</span>)\r\n                        </span>\r\n                      </v-tooltip>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n                </tbody>\r\n              </v-simple-table>\r\n            </div>\r\n          </div>\r\n        </v-col> -->\r\n      <!-- </v-row> -->\r\n    </v-container>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// @ is an alias to /src\r\n// import { HTTP } from './http-common';\r\n\r\nexport default {\r\n  created() {\r\n    this.refresh();\r\n    this.timer = setInterval(this.refresh, 60000)\r\n  },\r\n  beforeDestroy() {\r\n    clearInterval(this.timer)\r\n  },\r\n  data() {\r\n    return {\r\n      username: localStorage.getItem('username'),\r\n      servers: [],\r\n      highlightFreeGPUs: false,\r\n      onlyShowFreeGPU: false,\r\n      highlightUsername: true,\r\n      maxProcessesShow: 1,\r\n      refreshLoading: false,\r\n      snackbar: false,\r\n      date: '',\r\n    }\r\n  },\r\n  methods: {\r\n    // switchHighlightFreeGPU() {\r\n    //   this.highlightFreeGPUs = !this.highlightFreeGPUs;\r\n    // },\r\n    // switchShowFreeGPU() {\r\n    //   this.onlyShowFreeGPU = !this.onlyShowFreeGPU;\r\n    // },\r\n    // store_username() {\r\n    //   localStorage.setItem('username', this.username);\r\n    // },\r\n    // processList() {\r\n    //   let serverList = [...this.servers]\r\n\r\n    //   let serverListFiltered = [];\r\n    //   if (this.onlyShowFreeGPU) {\r\n    //     for (let i = 0; i < serverList.length; i++) {\r\n    //       let foundFreeGPU = false;\r\n    //       for (let j = 0; j < serverList[i].gpus.length; j++) {\r\n    //         if (serverList[i].gpus[j].memory_used < (serverList[i].gpus[j].memory_total * 0.1)) {\r\n    //           foundFreeGPU = true;\r\n    //           break;\r\n    //         }\r\n    //       }\r\n    //       if (foundFreeGPU) {\r\n    //         serverListFiltered.push(serverList[i])\r\n    //       }\r\n    //     }\r\n    //   } else {\r\n    //     serverListFiltered = serverList;\r\n    //   }\r\n    //   return serverListFiltered;\r\n    // },\r\n    // refresh() {\r\n    //   this.refreshLoading = true;\r\n    //   HTTP.get('get-gpus')\r\n    //       .then(res => {\r\n    //         this.servers = res.data;\r\n    //         this.servers.sort((a, b) => a.hostname < b.hostname ? -1 : 1);\r\n    //         this.refreshLoading = false;\r\n    //         this.date = new Date().toLocaleString(\"de-DE\", {timeZone: \"Europe/Berlin\"});\r\n    //       })\r\n    //       .catch(err => {\r\n    //         console.log(err);\r\n    //         this.refreshLoading = false;\r\n    //         this.snackbar = true;\r\n    //       });\r\n    // }\r\n  }\r\n}\r\n</script>"],"sourceRoot":"src/views"}]}