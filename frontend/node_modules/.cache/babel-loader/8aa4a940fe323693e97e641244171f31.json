{"remainingRequest":"C:\\Users\\Admin\\Desktop\\server-dashboard\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Admin\\Desktop\\server-dashboard\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\Admin\\Desktop\\server-dashboard\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Admin\\Desktop\\server-dashboard\\frontend\\src\\views\\Processes.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Admin\\Desktop\\server-dashboard\\frontend\\src\\views\\Processes.vue","mtime":1638793342127},{"path":"C:\\Users\\Admin\\Desktop\\server-dashboard\\frontend\\babel.config.js","mtime":1638793342112},{"path":"C:\\Users\\Admin\\Desktop\\server-dashboard\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1638800208235},{"path":"C:\\Users\\Admin\\Desktop\\server-dashboard\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1638800209093},{"path":"C:\\Users\\Admin\\Desktop\\server-dashboard\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1638800208235},{"path":"C:\\Users\\Admin\\Desktop\\server-dashboard\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1638800209398}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8gQCBpcyBhbiBhbGlhcyB0byAvc3JjCmltcG9ydCB7IEhUVFAgfSBmcm9tICcuL2h0dHAtY29tbW9uJzsKZXhwb3J0IGRlZmF1bHQgewogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB0aGlzLnJlZnJlc2goKTsKICAgIHRoaXMudGltZXIgPSBzZXRJbnRlcnZhbCh0aGlzLnJlZnJlc2gsIDYwMDAwKTsKICB9LAogIGJlZm9yZURlc3Ryb3k6IGZ1bmN0aW9uIGJlZm9yZURlc3Ryb3koKSB7CiAgICBjbGVhckludGVydmFsKHRoaXMudGltZXIpOwogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHVzZXJuYW1lOiBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgndXNlcm5hbWUnKSwKICAgICAgcHJvY2Vzc2VzOiBbXSwKICAgICAgcmVmcmVzaExvYWRpbmc6IGZhbHNlLAogICAgICBvbmx5U2hvd015UHJvYzogZmFsc2UsCiAgICAgIHNuYWNrYmFyOiBmYWxzZSwKICAgICAgZGF0ZTogJycKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBzd2l0Y2hNeVByb2M6IGZ1bmN0aW9uIHN3aXRjaE15UHJvYygpIHsKICAgICAgdGhpcy5vbmx5U2hvd015UHJvYyA9ICF0aGlzLm9ubHlTaG93TXlQcm9jOwogICAgfSwKICAgIHN0b3JlX3VzZXJuYW1lOiBmdW5jdGlvbiBzdG9yZV91c2VybmFtZSgpIHsKICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ3VzZXJuYW1lJywgdGhpcy51c2VybmFtZSk7CiAgICB9LAogICAgcHJvY2Vzc0xpc3Q6IGZ1bmN0aW9uIHByb2Nlc3NMaXN0KCkgewogICAgICB2YXIgcHJvY2Vzc0xpc3RGaWx0ZXJlZCA9IFtdOwoKICAgICAgaWYgKHRoaXMub25seVNob3dNeVByb2MpIHsKICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMucHJvY2Vzc2VzLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICBpZiAodGhpcy5wcm9jZXNzZXNbaV0udXNlciA9PT0gdGhpcy51c2VybmFtZSkgewogICAgICAgICAgICBwcm9jZXNzTGlzdEZpbHRlcmVkLnB1c2godGhpcy5wcm9jZXNzZXNbaV0pOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSBlbHNlIHsKICAgICAgICBwcm9jZXNzTGlzdEZpbHRlcmVkID0gdGhpcy5wcm9jZXNzZXM7CiAgICAgIH0KCiAgICAgIHJldHVybiBwcm9jZXNzTGlzdEZpbHRlcmVkOwogICAgfSwKICAgIHJlZnJlc2g6IGZ1bmN0aW9uIHJlZnJlc2goKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB0aGlzLnJlZnJlc2hMb2FkaW5nID0gdHJ1ZTsKICAgICAgSFRUUC5nZXQoJ2dldC1wcm9jZXNzZXMnKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBfdGhpcy5wcm9jZXNzZXMgPSByZXMuZGF0YTsKICAgICAgICBfdGhpcy5yZWZyZXNoTG9hZGluZyA9IGZhbHNlOwogICAgICAgIF90aGlzLmRhdGUgPSBuZXcgRGF0ZSgpLnRvTG9jYWxlU3RyaW5nKCJkZS1ERSIsIHsKICAgICAgICAgIHRpbWVab25lOiAiRXVyb3BlL0JlcmxpbiIKICAgICAgICB9KTsKICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycikgewogICAgICAgIGNvbnNvbGUubG9nKGVycik7CiAgICAgICAgX3RoaXMucmVmcmVzaExvYWRpbmcgPSBmYWxzZTsKICAgICAgICBfdGhpcy5zbmFja2JhciA9IHRydWU7CiAgICAgIH0pOwogICAgfQogIH0KfTs="},{"version":3,"sources":["Processes.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6DA;AACA,SAAA,IAAA,QAAA,eAAA;AAEA,eAAA;AACA,EAAA,OADA,qBACA;AACA,SAAA,OAAA;AACA,SAAA,KAAA,GAAA,WAAA,CAAA,KAAA,OAAA,EAAA,KAAA,CAAA;AACA,GAJA;AAKA,EAAA,aALA,2BAKA;AACA,IAAA,aAAA,CAAA,KAAA,KAAA,CAAA;AACA,GAPA;AAQA,EAAA,IARA,kBAQA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,YAAA,CAAA,OAAA,CAAA,UAAA,CADA;AAEA,MAAA,SAAA,EAAA,EAFA;AAGA,MAAA,cAAA,EAAA,KAHA;AAIA,MAAA,cAAA,EAAA,KAJA;AAKA,MAAA,QAAA,EAAA,KALA;AAMA,MAAA,IAAA,EAAA;AANA,KAAA;AAQA,GAjBA;AAkBA,EAAA,OAAA,EAAA;AACA,IAAA,YADA,0BACA;AACA,WAAA,cAAA,GAAA,CAAA,KAAA,cAAA;AACA,KAHA;AAIA,IAAA,cAJA,4BAIA;AACA,MAAA,YAAA,CAAA,OAAA,CAAA,UAAA,EAAA,KAAA,QAAA;AACA,KANA;AAOA,IAAA,WAPA,yBAOA;AACA,UAAA,mBAAA,GAAA,EAAA;;AACA,UAAA,KAAA,cAAA,EAAA;AACA,aAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,KAAA,SAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,cAAA,KAAA,SAAA,CAAA,CAAA,EAAA,IAAA,KAAA,KAAA,QAAA,EAAA;AACA,YAAA,mBAAA,CAAA,IAAA,CAAA,KAAA,SAAA,CAAA,CAAA,CAAA;AACA;AACA;AACA,OANA,MAMA;AACA,QAAA,mBAAA,GAAA,KAAA,SAAA;AACA;;AACA,aAAA,mBAAA;AACA,KAnBA;AAoBA,IAAA,OApBA,qBAoBA;AAAA;;AACA,WAAA,cAAA,GAAA,IAAA;AACA,MAAA,IAAA,CAAA,GAAA,CAAA,eAAA,EACA,IADA,CACA,UAAA,GAAA,EAAA;AACA,QAAA,KAAA,CAAA,SAAA,GAAA,GAAA,CAAA,IAAA;AACA,QAAA,KAAA,CAAA,cAAA,GAAA,KAAA;AACA,QAAA,KAAA,CAAA,IAAA,GAAA,IAAA,IAAA,GAAA,cAAA,CAAA,OAAA,EAAA;AAAA,UAAA,QAAA,EAAA;AAAA,SAAA,CAAA;AACA,OALA,EAMA,KANA,CAMA,UAAA,GAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,GAAA;AACA,QAAA,KAAA,CAAA,cAAA,GAAA,KAAA;AACA,QAAA,KAAA,CAAA,QAAA,GAAA,IAAA;AACA,OAVA;AAWA;AAjCA;AAlBA,CAAA","sourcesContent":["<template>\r\n  <div class=\"processes\">\r\n    <h1 class=\"subtitle-1 grey--text\">Processes</h1>\r\n\r\n    <v-snackbar v-model=\"snackbar\" :timeout=\"8000\" top color=\"red darken-4\">\r\n      <span>An error occurred while connecting to the servers.</span>\r\n      <v-btn text color=\"white\" @click=\"snackbar = false\">Close</v-btn>\r\n    </v-snackbar>\r\n\r\n    <v-container class=\"my-5\">\r\n      <v-row wrap>\r\n        <v-switch class=\"px-2 my-1 pt-5\" @change=\"switchMyProc()\" color=\"primary\" label=\"Only show my processes\"></v-switch>\r\n        <v-text-field class=\"px-2 my-1\" v-model=\"username\" color=\"purple\" @change=\"store_username()\" label=\"Type in username to filter\"></v-text-field>\r\n        <v-spacer></v-spacer>\r\n        <span class=\"grey--text pr-2 my-2\" v-if=\"date !== ''\">Last update: {{ date }}</span>\r\n        <div class=\"my-1 pt-4\">\r\n          <v-btn text color=\"grey\" class=\"my-0\" :loading=\"refreshLoading\" @click=\"refresh\">\r\n            <v-icon left>refresh</v-icon>\r\n            <span>Refresh</span>\r\n          </v-btn>\r\n        </div>\r\n\r\n      </v-row>\r\n\r\n      <div class=\"my-5\">\r\n        <v-simple-table dense>\r\n          <thead>\r\n            <tr>\r\n              <td><span class=\"font-weight-bold\">Server</span></td>\r\n              <td><span class=\"font-weight-bold\">User</span></td>\r\n              <td><span class=\"font-weight-bold\">PID</span></td>\r\n              <td><span class=\"font-weight-bold\">CPU</span></td>\r\n              <td><span class=\"font-weight-bold\">Memory</span></td>\r\n              <td><span class=\"font-weight-bold\">Start</span></td>\r\n              <td><span class=\"font-weight-bold\">Time</span></td>\r\n              <td><span class=\"font-weight-bold\">Command</span></td>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"process in processList()\" :key=\"process.pid\">\r\n              <td><span>{{ process.server }}</span></td>\r\n              <td>\r\n                <span v-if=\"process.user === username\" class=\"purple--text\">{{ process.user }}</span>\r\n                <span v-if=\"process.user !== username\">{{ process.user }}</span>\r\n              </td>\r\n              <td><span>{{ process.pid }}</span></td>\r\n              <td><span>{{ process.cpu }}%</span></td>\r\n              <td><span>{{ process.mem }}%</span></td>\r\n              <td><span>{{ process.start }}</span></td>\r\n              <td><span>{{ process.time }}</span></td>\r\n              <td><span>{{ process.command }}</span></td>\r\n            </tr>\r\n          </tbody>\r\n        </v-simple-table>\r\n      </div>\r\n    </v-container>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// @ is an alias to /src\r\nimport { HTTP } from './http-common';\r\n\r\nexport default {\r\n  created() {\r\n    this.refresh();\r\n    this.timer = setInterval(this.refresh, 60000)\r\n  },\r\n  beforeDestroy() {\r\n    clearInterval(this.timer)\r\n  },\r\n  data() {\r\n    return {\r\n      username: localStorage.getItem('username'),\r\n      processes: [],\r\n      refreshLoading: false,\r\n      onlyShowMyProc: false,\r\n      snackbar: false,\r\n      date: '',\r\n    }\r\n  },\r\n  methods: {\r\n    switchMyProc() {\r\n      this.onlyShowMyProc = !this.onlyShowMyProc;\r\n    },\r\n    store_username() {\r\n      localStorage.setItem('username', this.username);\r\n    },\r\n    processList() {\r\n      let processListFiltered = [];\r\n      if (this.onlyShowMyProc) {\r\n        for (let i = 0; i < this.processes.length; i++) {\r\n          if (this.processes[i].user === this.username) {\r\n            processListFiltered.push(this.processes[i]);\r\n          }\r\n        }\r\n      } else {\r\n        processListFiltered = this.processes;\r\n      }\r\n      return processListFiltered;\r\n    },\r\n    refresh() {\r\n      this.refreshLoading = true;\r\n      HTTP.get('get-processes')\r\n          .then(res => {\r\n            this.processes = res.data;\r\n            this.refreshLoading = false;\r\n            this.date = new Date().toLocaleString(\"de-DE\", {timeZone: \"Europe/Berlin\"});\r\n          })\r\n          .catch(err => {\r\n            console.log(err);\r\n            this.refreshLoading = false;\r\n            this.snackbar = true;\r\n          });\r\n    }\r\n  }\r\n}\r\n</script>"],"sourceRoot":"src/views"}]}