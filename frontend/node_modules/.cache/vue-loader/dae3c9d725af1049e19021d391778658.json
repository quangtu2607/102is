{"remainingRequest":"C:\\Users\\Admin\\Desktop\\server-dashboard\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Admin\\Desktop\\server-dashboard\\frontend\\src\\views\\Processes.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Admin\\Desktop\\server-dashboard\\frontend\\src\\views\\Processes.vue","mtime":1638793342127},{"path":"C:\\Users\\Admin\\Desktop\\server-dashboard\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1638800208235},{"path":"C:\\Users\\Admin\\Desktop\\server-dashboard\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1638800209093},{"path":"C:\\Users\\Admin\\Desktop\\server-dashboard\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1638800208235},{"path":"C:\\Users\\Admin\\Desktop\\server-dashboard\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1638800209398}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQovLyBAIGlzIGFuIGFsaWFzIHRvIC9zcmMNCmltcG9ydCB7IEhUVFAgfSBmcm9tICcuL2h0dHAtY29tbW9uJzsNCg0KZXhwb3J0IGRlZmF1bHQgew0KICBjcmVhdGVkKCkgew0KICAgIHRoaXMucmVmcmVzaCgpOw0KICAgIHRoaXMudGltZXIgPSBzZXRJbnRlcnZhbCh0aGlzLnJlZnJlc2gsIDYwMDAwKQ0KICB9LA0KICBiZWZvcmVEZXN0cm95KCkgew0KICAgIGNsZWFySW50ZXJ2YWwodGhpcy50aW1lcikNCiAgfSwNCiAgZGF0YSgpIHsNCiAgICByZXR1cm4gew0KICAgICAgdXNlcm5hbWU6IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCd1c2VybmFtZScpLA0KICAgICAgcHJvY2Vzc2VzOiBbXSwNCiAgICAgIHJlZnJlc2hMb2FkaW5nOiBmYWxzZSwNCiAgICAgIG9ubHlTaG93TXlQcm9jOiBmYWxzZSwNCiAgICAgIHNuYWNrYmFyOiBmYWxzZSwNCiAgICAgIGRhdGU6ICcnLA0KICAgIH0NCiAgfSwNCiAgbWV0aG9kczogew0KICAgIHN3aXRjaE15UHJvYygpIHsNCiAgICAgIHRoaXMub25seVNob3dNeVByb2MgPSAhdGhpcy5vbmx5U2hvd015UHJvYzsNCiAgICB9LA0KICAgIHN0b3JlX3VzZXJuYW1lKCkgew0KICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ3VzZXJuYW1lJywgdGhpcy51c2VybmFtZSk7DQogICAgfSwNCiAgICBwcm9jZXNzTGlzdCgpIHsNCiAgICAgIGxldCBwcm9jZXNzTGlzdEZpbHRlcmVkID0gW107DQogICAgICBpZiAodGhpcy5vbmx5U2hvd015UHJvYykgew0KICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMucHJvY2Vzc2VzLmxlbmd0aDsgaSsrKSB7DQogICAgICAgICAgaWYgKHRoaXMucHJvY2Vzc2VzW2ldLnVzZXIgPT09IHRoaXMudXNlcm5hbWUpIHsNCiAgICAgICAgICAgIHByb2Nlc3NMaXN0RmlsdGVyZWQucHVzaCh0aGlzLnByb2Nlc3Nlc1tpXSk7DQogICAgICAgICAgfQ0KICAgICAgICB9DQogICAgICB9IGVsc2Ugew0KICAgICAgICBwcm9jZXNzTGlzdEZpbHRlcmVkID0gdGhpcy5wcm9jZXNzZXM7DQogICAgICB9DQogICAgICByZXR1cm4gcHJvY2Vzc0xpc3RGaWx0ZXJlZDsNCiAgICB9LA0KICAgIHJlZnJlc2goKSB7DQogICAgICB0aGlzLnJlZnJlc2hMb2FkaW5nID0gdHJ1ZTsNCiAgICAgIEhUVFAuZ2V0KCdnZXQtcHJvY2Vzc2VzJykNCiAgICAgICAgICAudGhlbihyZXMgPT4gew0KICAgICAgICAgICAgdGhpcy5wcm9jZXNzZXMgPSByZXMuZGF0YTsNCiAgICAgICAgICAgIHRoaXMucmVmcmVzaExvYWRpbmcgPSBmYWxzZTsNCiAgICAgICAgICAgIHRoaXMuZGF0ZSA9IG5ldyBEYXRlKCkudG9Mb2NhbGVTdHJpbmcoImRlLURFIiwge3RpbWVab25lOiAiRXVyb3BlL0JlcmxpbiJ9KTsNCiAgICAgICAgICB9KQ0KICAgICAgICAgIC5jYXRjaChlcnIgPT4gew0KICAgICAgICAgICAgY29uc29sZS5sb2coZXJyKTsNCiAgICAgICAgICAgIHRoaXMucmVmcmVzaExvYWRpbmcgPSBmYWxzZTsNCiAgICAgICAgICAgIHRoaXMuc25hY2tiYXIgPSB0cnVlOw0KICAgICAgICAgIH0pOw0KICAgIH0NCiAgfQ0KfQ0K"},{"version":3,"sources":["Processes.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6DA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Processes.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"processes\">\r\n    <h1 class=\"subtitle-1 grey--text\">Processes</h1>\r\n\r\n    <v-snackbar v-model=\"snackbar\" :timeout=\"8000\" top color=\"red darken-4\">\r\n      <span>An error occurred while connecting to the servers.</span>\r\n      <v-btn text color=\"white\" @click=\"snackbar = false\">Close</v-btn>\r\n    </v-snackbar>\r\n\r\n    <v-container class=\"my-5\">\r\n      <v-row wrap>\r\n        <v-switch class=\"px-2 my-1 pt-5\" @change=\"switchMyProc()\" color=\"primary\" label=\"Only show my processes\"></v-switch>\r\n        <v-text-field class=\"px-2 my-1\" v-model=\"username\" color=\"purple\" @change=\"store_username()\" label=\"Type in username to filter\"></v-text-field>\r\n        <v-spacer></v-spacer>\r\n        <span class=\"grey--text pr-2 my-2\" v-if=\"date !== ''\">Last update: {{ date }}</span>\r\n        <div class=\"my-1 pt-4\">\r\n          <v-btn text color=\"grey\" class=\"my-0\" :loading=\"refreshLoading\" @click=\"refresh\">\r\n            <v-icon left>refresh</v-icon>\r\n            <span>Refresh</span>\r\n          </v-btn>\r\n        </div>\r\n\r\n      </v-row>\r\n\r\n      <div class=\"my-5\">\r\n        <v-simple-table dense>\r\n          <thead>\r\n            <tr>\r\n              <td><span class=\"font-weight-bold\">Server</span></td>\r\n              <td><span class=\"font-weight-bold\">User</span></td>\r\n              <td><span class=\"font-weight-bold\">PID</span></td>\r\n              <td><span class=\"font-weight-bold\">CPU</span></td>\r\n              <td><span class=\"font-weight-bold\">Memory</span></td>\r\n              <td><span class=\"font-weight-bold\">Start</span></td>\r\n              <td><span class=\"font-weight-bold\">Time</span></td>\r\n              <td><span class=\"font-weight-bold\">Command</span></td>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"process in processList()\" :key=\"process.pid\">\r\n              <td><span>{{ process.server }}</span></td>\r\n              <td>\r\n                <span v-if=\"process.user === username\" class=\"purple--text\">{{ process.user }}</span>\r\n                <span v-if=\"process.user !== username\">{{ process.user }}</span>\r\n              </td>\r\n              <td><span>{{ process.pid }}</span></td>\r\n              <td><span>{{ process.cpu }}%</span></td>\r\n              <td><span>{{ process.mem }}%</span></td>\r\n              <td><span>{{ process.start }}</span></td>\r\n              <td><span>{{ process.time }}</span></td>\r\n              <td><span>{{ process.command }}</span></td>\r\n            </tr>\r\n          </tbody>\r\n        </v-simple-table>\r\n      </div>\r\n    </v-container>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// @ is an alias to /src\r\nimport { HTTP } from './http-common';\r\n\r\nexport default {\r\n  created() {\r\n    this.refresh();\r\n    this.timer = setInterval(this.refresh, 60000)\r\n  },\r\n  beforeDestroy() {\r\n    clearInterval(this.timer)\r\n  },\r\n  data() {\r\n    return {\r\n      username: localStorage.getItem('username'),\r\n      processes: [],\r\n      refreshLoading: false,\r\n      onlyShowMyProc: false,\r\n      snackbar: false,\r\n      date: '',\r\n    }\r\n  },\r\n  methods: {\r\n    switchMyProc() {\r\n      this.onlyShowMyProc = !this.onlyShowMyProc;\r\n    },\r\n    store_username() {\r\n      localStorage.setItem('username', this.username);\r\n    },\r\n    processList() {\r\n      let processListFiltered = [];\r\n      if (this.onlyShowMyProc) {\r\n        for (let i = 0; i < this.processes.length; i++) {\r\n          if (this.processes[i].user === this.username) {\r\n            processListFiltered.push(this.processes[i]);\r\n          }\r\n        }\r\n      } else {\r\n        processListFiltered = this.processes;\r\n      }\r\n      return processListFiltered;\r\n    },\r\n    refresh() {\r\n      this.refreshLoading = true;\r\n      HTTP.get('get-processes')\r\n          .then(res => {\r\n            this.processes = res.data;\r\n            this.refreshLoading = false;\r\n            this.date = new Date().toLocaleString(\"de-DE\", {timeZone: \"Europe/Berlin\"});\r\n          })\r\n          .catch(err => {\r\n            console.log(err);\r\n            this.refreshLoading = false;\r\n            this.snackbar = true;\r\n          });\r\n    }\r\n  }\r\n}\r\n</script>"]}]}